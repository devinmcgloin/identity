{"componentChunkName":"component---src-templates-writing-js","path":"/writing/2016/cloud/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Information Overflow\",\n  \"date\": \"2016-08-13\",\n  \"excerpt\": \"Each of us is walking around with a lot of data. Not only what is physically on our smartphones and laptops, but also what we’ve got backed up to the cloud. The cloud gives us automatic backups, and places to store content by the terabyte, but the current model by which we interact with the cloud is far from optimal.\",\n  \"category\": \"Computing\",\n  \"tags\": [\"Computing\"],\n  \"layout\": \"post\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Each of us is walking around with a lot of data. Not only what is physically on\\nour smartphones and laptops, but also what we\\u2019ve got backed up to the cloud. The\\ncloud gives us automatic backups, and places to store content by the terabyte,\\nbut the current model by which we interact with the cloud is far from optimal.\"), mdx(\"p\", null, \"As it stands currently you download a portal into your online storage, and view\\nthe content through that application. Dropbox gives you general file editing,\\nand Google goes even further allowing you to do everything you could do in the\\nbrowser in an application on your phone.\"), mdx(\"p\", null, \"This model has a few key downsides:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You have information stored in multiple services, making it harder to search though and find.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Your interactions with your data is limited to what the service provides.\")), mdx(\"h2\", null, \"What is information overflow?\"), mdx(\"p\", null, \"The cloud should serve as the base for all your computing needs and everything\\nshould always be synced and updated to the cloud. If you need to access a\\nspecific document or photograph it gets downloaded onto your hard drive when you\\nopen it. If there is not enough room you just remove a lesser used file, after\\nall, its backed up in the cloud. No matter what you always have all your\\ndocuments, pictures, books and files. You can make better use of your mobile\\ndevices as a result. Syncing preferences, accounts, passwords and everything\\nelse would be incredibly simple.\"), mdx(\"div\", {\n    className: \"message\"\n  }, \"In this way, information (photos, documents, etc) overflows into the next largest container, with the cloud representing ground truth.\"), mdx(\"p\", null, \"We already have a weak form of this, in which we have specific services that\\nback up items to the cloud, or sync passwords among your devices. However this\\nis not the same a syncing everything, automatically, always. That level of\\nconsistency across multiple applications and accounts would make programming\\neasier for app developers, and make the user experience when switching devices\\nsimple. In fact developers wouldn\\u2019t have to worry about authentication, their\\nown servers or syncing content. This would be a huge boon for developers and\\nallow them to focus on what makes their application great. Solving this problem\\nwould raise the quality of applications, and make it easier for users to keep\\nfiles in sync. Dropbox has made some really promising steps in this direction\\nwith the announcement of Project Infinite, but it is not at this scale.\"), mdx(\"h2\", null, \"Phones as an entry point\"), mdx(\"p\", null, \"If the cloud were fully embraced there would be no need for anybody to own a\\ncomputer besides their smartphone. This is starting to happen with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://www.theverge.com/2015/4/29/8513519/microsoft-windows-10-continuum-for-phones\"\n  }), \"Microsoft\\nContinuum\"), \" feature, in which a phone is used with a larger screen, keyboard\\nand mouse as a full computer. You could push this further and stream down\\ncontent needed, and outsource expensive computations to the cloud.\"), mdx(\"p\", null, \"Phones are also getting powerful enough for most common use cases, allowing\\npeople to work entirely off their phones. What matters is the UI code and having\\nan extra screen to use.\"), mdx(\"h2\", null, \"Logical Consistency between devices\"), mdx(\"p\", null, \"If devices were fully consistent with each other a whole host of issues would\\ndisappear. People wouldn't wonder why files aren't syncing, or where something\\nwent. Version histories would be easier to keep without worrying about disk\\nspace. Users could have everything at their fingertips without having to\\nconsider where it's located or how to get it. This is incredibly important for\\nuser productivity and peace of mind.\"), mdx(\"h2\", null, \"What is stopping this from happening tomorrow?\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Network speeds aren't fast enough in a significant number of localities to\\nsupport such reliance on the cloud.\"), \" Around 80-100 Mbit/s seems like a good\\nthreshold for the this to become feasible across rural environments. Certainly\\nwith Gigabyte networks speeds this would play out quite well.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"No large player has emerged with standardized interfaces to various cloud\\nproviders that would allow the cloud to be treated as a utility.\"), \" In short we\\ntreat the cloud as something that programmers deal with, when we could\\nprobably abstract things further for the end user. Storage is Storage and\\nCompute is Compute. It doesn't really matter where it comes from, just how\\nmuch it costs.\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Update 11-10-16:\"), \" Looks like \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://cloudrail.com/enterprise-cloud-storage-interface/\"\n  }), \"CloudRail\"), \" just announced a standard interface to\\na number of popular cloud providers.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Information Overflow","date":"Saturday, August 13th 02016","tags":["Computing"]},"excerpt":"Each of us is walking around with a lot of data. Not only what is physically on our smartphones and laptops, but also what we’ve got backed up to the cloud. The cloud gives us automatic backups, and places to store content by the terabyte, but the current model by which we interact with the cloud is far from optimal."}},"pageContext":{"slug":"/writing/2016/cloud/"}}}