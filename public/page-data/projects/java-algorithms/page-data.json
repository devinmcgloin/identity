{"componentChunkName":"component---src-templates-project-js","path":"/projects/java-algorithms/","result":{"data":{"mdx":{"frontmatter":{"title":"Java Algorithms","date":"2015-11-23","repo":"devinmcgloin/Java-Algorithms","license":"MIT"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"layout\": \"project\",\n  \"title\": \"Java Algorithms\",\n  \"permalink\": \"/java-algorithms/\",\n  \"excerpt\": \"An implementation of common algorithms and data structures in Java.\",\n  \"date\": \"2015-11-23\",\n  \"repo\": \"devinmcgloin/Java-Algorithms\",\n  \"license\": \"MIT\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"An implementation of common algorithms and data structures in Java. The goal with this project was to become more familiar with common data structures by implementing them. My interest wained about halfway through the endeavor and I decided to focus on more interesting things.\"), mdx(\"p\", null, \"Implemented:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sorts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Data structures\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Searches\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Graph Algorithms\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Simple Encryption\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"An implementation of common algorithms and data structures in Java."}},"pageContext":{"slug":"/projects/java-algorithms/"}}}