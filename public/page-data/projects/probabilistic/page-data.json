{"componentChunkName":"component---src-templates-project-js","path":"/projects/probabilistic/","result":{"data":{"mdx":{"frontmatter":{"title":"Probabilistic","date":"2018-02-01","repo":"devinmcgloin/probabilistic","license":"MIT"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"layout\": \"project\",\n  \"title\": \"Probabilistic\",\n  \"permalink\": \"/Probabilistic/\",\n  \"excerpt\": \"Golang implementations of Bloom Filters, Min Sketch Count and Min Hashing.\",\n  \"date\": \"2018-02-01\",\n  \"repo\": \"devinmcgloin/probabilistic\",\n  \"license\": \"MIT\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This Library implements Probabilistic Datastructures for Golang.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-text\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"go get github.com/devinmcgloin/probabilistic\"))), mdx(\"h2\", null, \"Implementations\"), mdx(\"p\", null, \"Currently includes Bloom Filters, Min Sketch Count and Min Hashing. I have plans\\nto add HyperLogLog++, SkipLists and Treaps. They'll arrive soonish or maybe not\\nat all. If you want to help out with any of these or improve the hashing\\nalgorithms used feel free to make a pull request.\"), mdx(\"h2\", null, \"Usage\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All of these data structures take error thresholds, if you require less\\naccuracy it's important to reduce those thresholds for performance reasons.\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Golang implementations of Bloom Filters, Min Sketch Count and Min Hashing."}},"pageContext":{"slug":"/projects/probabilistic/"}}}