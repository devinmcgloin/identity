{"componentChunkName":"component---src-templates-tags-js","path":"/tags/ideas","result":{"data":{"allMdx":{"totalCount":5,"edges":[{"node":{"frontmatter":{"title":"Visual Engineering","date":"Wednesday, January 24th 02018","tags":["Ideas","Humane Software"]},"fields":{"slug":"/writing/2018/visual-engineering/"},"excerpt":"When building some physical product the feedback loop between the creation of a new idea and actually testing it is far to high. Visual Engineering is a rapid feedback environment for validating hunches and answering questions about engineering."}},{"node":{"frontmatter":{"title":"Changefiles","date":"Friday, May 27th 02016","tags":["Ideas","Programming"]},"fields":{"slug":"/writing/2016/changefiles/"},"excerpt":"Changefiles are an interesting way to approach thinking about updating a piece of software. Allowing for more productive programmers and better libraries that can be tuned for a specific use case."}},{"node":{"frontmatter":{"title":"Calendars","date":"Saturday, April 23rd 02016","tags":["Ideas","Humane Software"]},"fields":{"slug":"/writing/2016/calendars/"},"excerpt":"I've found myself becoming increasingly dissatisfied with calendar applications. Fundamentally, I think they're solving the wrong problem. They should focus how to best spend your time, whatâ€™s the most optimal arrangement of these events for my productivity and well-being?"}},{"node":{"frontmatter":{"title":"Universal Types","date":"Friday, January 15th 02016","tags":["Ideas","Programming"]},"fields":{"slug":"/writing/2016/types/"},"excerpt":"These types generally take the form of persistent trees. This allows people to modify them as they wish and recover from any unexpected changes. I have in mind that these objects will be stored in a collections framework that allows for common operations over most data structures"}},{"node":{"frontmatter":{"title":"VTest","date":"Wednesday, November 25th 02015","tags":["Ideas","Programming"]},"fields":{"slug":"/writing/2015/vtest/"},"excerpt":"VTest is designed to allow you to see bugs that you did not anticipate. It does this by visualizing the results of function, and clustering their results. The goal is to show you the absence of bugs, in order to do this, the functions being tested have to be pure, and testing may be slow for functions that take complex objects."}}]}},"pageContext":{"tag":"Ideas"}}}