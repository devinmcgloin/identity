{"componentChunkName":"component---src-templates-tags-js","path":"/tags/programming","result":{"data":{"allMdx":{"totalCount":8,"edges":[{"node":{"frontmatter":{"title":"What Testing Gets You","date":"Saturday, August 25th 02018","tags":["Programming","Testing"]},"fields":{"slug":"/writing/2018/testing/"},"excerpt":"Often times testing is viewed as a guaranteed way to ensure your function behaves as you expect it to. However this is far from what is actually happening. A excellent example of this occurred a few years back and I want to take a look at the problem and see what standard testing practices would get you and the best way to approach the problem."}},{"node":{"frontmatter":{"title":"What we can learn from Unix","date":"Saturday, May 28th 02016","tags":["Software Design","Programming"]},"fields":{"slug":"/writing/2016/unix/"},"excerpt":"The Unix Philosophy is a wonderfully cohesive way to thing about program execution and composition. Its beauty relies in its simplicity, somewhat unfortunately this is also tied to the fact that Unix is dealing with software on the operating system level. We’re going to explore what the Unix Philosophy is and what it allows us to do when working in a Unix shell. All the while exploring how Unix can guide our attempts to create simpler programs at a higher level of the stack."}},{"node":{"frontmatter":{"title":"Changefiles","date":"Friday, May 27th 02016","tags":["Ideas","Programming"]},"fields":{"slug":"/writing/2016/changefiles/"},"excerpt":"Changefiles are an interesting way to approach thinking about updating a piece of software. Allowing for more productive programmers and better libraries that can be tuned for a specific use case."}},{"node":{"frontmatter":{"title":"Designing for a use case","date":"Friday, January 29th 02016","tags":["Software Design","Programming"]},"fields":{"slug":"/writing/2016/designing-for-a-use-case/"},"excerpt":"When you develop an application or some software artifact you consider what task the program is to complete. You make a model of who your customers are, and how they interact with your service, and then you proceed to implement that.\n"}},{"node":{"frontmatter":{"title":"Universal Types","date":"Friday, January 15th 02016","tags":["Ideas","Programming"]},"fields":{"slug":"/writing/2016/types/"},"excerpt":"These types generally take the form of persistent trees. This allows people to modify them as they wish and recover from any unexpected changes. I have in mind that these objects will be stored in a collections framework that allows for common operations over most data structures"}},{"node":{"frontmatter":{"title":"VTest","date":"Wednesday, November 25th 02015","tags":["Ideas","Programming"]},"fields":{"slug":"/writing/2015/vtest/"},"excerpt":"VTest is designed to allow you to see bugs that you did not anticipate. It does this by visualizing the results of function, and clustering their results. The goal is to show you the absence of bugs, in order to do this, the functions being tested have to be pure, and testing may be slow for functions that take complex objects."}},{"node":{"frontmatter":{"title":"Mental Models","date":"Sunday, September 13th 02015","tags":["Programming"]},"fields":{"slug":"/writing/2015/bjarne-stroustrup-on-working-away-from-the-metal/"},"excerpt":"I recently had the pleasure of seeing Bjarne Stroustrup speak at an event at NYU. The talk focused on the role of C++ and his role at Morgan Stanley, but what was far more interesting was the manner in which he thought about programming concepts."}},{"node":{"frontmatter":{"title":"Haskell Pattern Matching","date":"Tuesday, July 7th 02015","tags":["Programming"]},"fields":{"slug":"/writing/2015/Haskell/"},"excerpt":"One of the most interesting aspects of computer science are\nprogramming languages, they are the means by which the user and the\ncomputer interact and in their choices support certain modes of\nthought. Some modes of thought are promoted more than others, the\ndominant…"}}]}},"pageContext":{"tag":"Programming"}}}